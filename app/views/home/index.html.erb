<nav class="navbar navbar-default" role="navigation">
	<a class="navbar-brand" href="#">Team Name</a>
	<ul class="nav navbar-nav">
		<li class="createQuery">
			<a href="#">Query</a>
		</li>
		<li>
			<a href="#">Home</a>
		</li>
		<li>
			<a href="#">Link</a>
		</li>
		
		<li class="sign-in">
			<a href="#">Sign in</a>
		</li>
		<li class="register">
			<a href="#">Register</a>
		</li>
	</ul>
</nav>
	
<div class="fullwidth-container">
	<div class="row">
		<aside class="span5" id="queryBar"><!-- Sidebar starts here  -->    
    	 <div class="row">
          <div class="filterValues">
            <form>
    			<div class="form-group">
        			<label for="searchName">Search name:</label>
  					<br><br>
  					<input id="searchName" type="text" value="">
    			</div>
    			<div id="timeSearch" class="form-group">
        			<label for="searchName">Time Range:</label>
  					<input type="range" id="Year" class="rangeFilter" value="" data-slider-min="0" data-slider-max="10" data-slider-step="1" data-slider-value="5" data-slider-orientation="horizontal" data-slider-selection="after"data-slider-tooltip="show" data-slider-handle="round" >
    			</div>
    			<br><br>
    			<div id="adjustFilters" class="dropdown">
    			<button class="searchButton btn btn-primary" onclick="splunkSearch()">Search</button>
    			<button id="addFilter" type="button" data-toggle="dropdown" class="dropdown-toggle addFilter btn btn-primary" >+
    				<span class="caret"></span>
    			</button>
     		   		<ul class="dropdown-menu" id="dropdownList" aria-labelledby="dropdownMenu1">
            			<li id="Health-Pollution" onclick="selectCategory(id)">Health/ Pollution</li>
			            <li id="Safety-Crime" onclick="selectCategory(id)">Safety/ Crime</li>
			            <li id="Economy" onclick="selectCategory(id)">Economic Factors</li>
			            <li id="Infrastructure" onclick="selectCategory(id)">Infrastructure</li>
			            <li class="divider"></li>
			            <li id="GeneralHealthIndicator" onclick="selectCategory(id)">OverallHealth</li>
			        </ul>    	
			    </div>
			    <div class="btn-group">
			</form>
           </div>
         </div>
        </aside>
        <script>
        	$(document).ready(function() {
 				$("#queryBar").css("height", $(".fullwidth-container").height());
				$('#queryBar').hide();
		});
        </script>
        <script type="text/javascript">
    		$('.createQuery').on('click', function(){
		     if( $('#queryBar').is(':visible') ) {
        	    $('#queryBar').animate({ 'width': '0px' }, 'slow', function(){
               	$('#queryBar').hide();
            	});
        	}
        	else {
            	$('#queryBar').show();
           		$('#queryBar').animate({ 'width': '210px' }, 'slow'); }
    		});
		</script>


      </div>
		<div class="col-12">
		    <div id="map" class="map"></div>
		    <script type="text/javascript">
		      var vectorSource = new ol.source.Vector({
		        url: 'assets/countries.geo.json',
		        format: new ol.format.GeoJSON()
		      });

		      var map = new ol.Map({
		        target: 'map',
		        layers: [
		          new ol.layer.Tile({
		            source: new ol.source.MapQuest({layer: 'sat'})
		          })
		        ,
		        	new ol.layer.Vector({
		        		source: vectorSource
		        		
		        	})
		        ],
		        view: new ol.View({
		          center: ol.proj.transform([37.41, 8.82], 'EPSG:4326', 'EPSG:3857'),
		          zoom: 4
		        })
		      });

		      // a normal select interaction to handle click
		      var select = new ol.interaction.Select();
		      map.addInteraction(select);

		      var selectedFeatures = select.getFeatures();

		      // a DragBox interaction used to select features by drawing boxes
		      var dragBox = new ol.interaction.DragBox({
		        condition: ol.events.condition.shiftKeyOnly,
		        style: new ol.style.Style({
		          stroke: new ol.style.Stroke({
		            color: [0, 0, 255, 1]
		          })
		        })
		      });

		      map.addInteraction(dragBox);

		      var infoBox = document.getElementById('info');

		      dragBox.on('boxend', function(e) {
		        // features that intersect the box are added to the collection of
		        // selected features, and their names are displayed in the "info"
		        // div
		        var info = [];
		        var extent = dragBox.getGeometry().getExtent();
		        console.log(extent);
		        vectorSource.forEachFeatureIntersectingExtent(extent, function(feature) {
		          selectedFeatures.push(feature);
		          info.push(feature.get('name'));
		        });
		        if (info.length > 0) {
		          infoBox.innerHTML = info.join(', ');
		        }
		      });
		    </script>	
		</div>	
	</div>
	
	<div class="chartcontainer">
		<div class="row">
		<div id="chart1" class="span9"></div>
			
	</div>
</div>


