<nav class="navbar navbar-default" role="navigation">
	<a class="navbar-brand" href="#">Title</a>
	<ul class="nav navbar-nav">
		<li class="active">
			<a href="#">Home</a>
		</li>
		<li>
			<a href="#">Link</a>
		</li>
	</ul>
</nav>
<div class="fullwidth-container">
	<div class="row">
		<div class="col-12">
		    <div id="map" class="map"></div>
		    <script type="text/javascript">
		      var vectorSource = new ol.source.Vector({
		        url: 'assets/countries.geo.json',
		        format: new ol.format.GeoJSON()
		      });

		      var map = new ol.Map({
		        target: 'map',
		        layers: [
		          new ol.layer.Tile({
		            source: new ol.source.MapQuest({layer: 'sat'})
		          })
		        ,
		        	new ol.layer.Vector({
		        		source: vectorSource

		        		
		        	})
		        ],
		        view: new ol.View({
		          center: ol.proj.transform([37.41, 8.82], 'EPSG:4326', 'EPSG:3857'),
		          zoom: 4
		        })
		      });

		      // a normal select interaction to handle click
		      var select = new ol.interaction.Select();
		      map.addInteraction(select);

		      var selectedFeatures = select.getFeatures();

		      // a DragBox interaction used to select features by drawing boxes
		      var dragBox = new ol.interaction.DragBox({
		        condition: ol.events.condition.shiftKeyOnly,
		        style: new ol.style.Style({
		          stroke: new ol.style.Stroke({
		            color: [0, 0, 255, 1]
		          })
		        })
		      });

		      map.addInteraction(dragBox);

		      var infoBox = document.getElementById('info');

		      dragBox.on('boxend', function(e) {
		        // features that intersect the box are added to the collection of
		        // selected features, and their names are displayed in the "info"
		        // div
		        var info = [];
		        var extent = dragBox.getGeometry().getExtent();
		        console.log(extent);
		        vectorSource.forEachFeatureIntersectingExtent(extent, function(feature) {
		          selectedFeatures.push(feature);
		          info.push(feature.get('name'));
		        });
		        if (info.length > 0) {
		          infoBox.innerHTML = info.join(', ');
		        }
		      });

		      function executeSplunk(){
		      	// get the value of the search div

		      	var minlat = $("#minlat").val(); 
		      	var maxlat = $("#maxlat").val();
		      	var minlong = $("#minlong").val();
		      	var maxlong = $("#maxlong").val();


		      	var http = new splunkjs.ProxyHttp("/proxy");
                var service = new splunkjs.Service(http, {
                    username: "esa",
                    password: "esa",
                });

            service.login(function(err, success) {
                if (err) {
                    throw err;
                }

            console.log("Login was successful: " + success);
		console.log("`co2countrybbox(" + minlat + "," + maxlat + "," + minlong + ","+ maxlong +")`");
            service.jobs().create(" `co2countrybbox(" + minlat + "," + maxlat + "," + minlong + ","+ maxlong +")`",{
                status_buckets: 300
            }, function(err, job){
                if(err){
                    console.log(err);
                    return;
                }
                console.log('job created');
                job.track({}, {
                    error: function(err) {
                        console.log('job error: '+err);
                    },
                    done: function(job) {
                        console.log('job done');
                        job.results({
                            output_mode: "json_cols"
                        }, function(err, results){
                            if(err){
                                console.log(err);
                                return;
                            }
                            console.log(results);
                            var chart = new splunkjs.UI.Charting.Chart($("#chart1"), splunkjs.UI.Charting.ChartType.COLUMN, false);
                            chart.setData(results, {
                                "chart.stackMode": "stacked"
                            });
                            chart.draw();
                        });
                    }
                });
            });
		      });
				};

		    </script>	
		</div>	
	</div>
	<div class="chartcontainer">
		<div class="row">
	<button type="button" class="btn btn-default" onclick="executeSplunk()">Call Prodecure</button>
	<div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
		<div class="form-group">
		<label for="input" class="col-sm-2 control-label">MinLat:</label>
		<div class="col-sm-10">
			<input type="text" name="" id="minlat" class="form-control" value="" required="required" pattern="" title="">
		</div>
		<label for="input" class="col-sm-2 control-label">MaxLat:</label>
		<div class="col-sm-10">
			<input type="text" name="" id="maxlat" class="form-control" value="" required="required" pattern="" title="">
		</div>
		<label for="input" class="col-sm-2 control-label">MinLong:</label>
		<div class="col-sm-10">
			<input type="text" name="" id="minlong" class="form-control" value="" required="required" pattern="" title="">
		</div>
		<label for="input" class="col-sm-2 control-label">MaxLong:</label>
		<div class="col-sm-10">
			<input type="text" name="" id="maxlong" class="form-control" value="" required="required" pattern="" title="">
		</div>
	</div>
	</div>
		</div>
		<div class="row">
			<div id="querytest"></div>
		</div>
		<div class="row">
			<div id="chart1"></div>
		</div>
	</div>

</div>
